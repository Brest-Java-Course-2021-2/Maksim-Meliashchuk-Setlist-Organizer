example:
  property: example posrgres property

server:
  error:
    include-binding-errors: always
    include-exception: true
    include-message: always
  port: ${PORT:8088}

spring:

  logging:
    level:
      org.springframework.security: DEBUG


  datasource:
    driver-class-name: org.postgresql.Driver
    password: "{cipher}a491026b1dce27ae3b20f9db63eb6152098dfba1a988e9a58e85e2a5dc5c1c4e"
    url: jdbc:postgresql://localhost:5433/setlistOrganizer
    username: postgres

  flyway:
    enabled: true

  jackson:
    date-format: yyyy/MM/dd
    serialization:
      INDENT_OUTPUT: true
  jpa:
    show-sql: true

  main:
    allow-bean-definition-overriding: true

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${KEYCLOAK_REALM_CERT_URL:http://localhost:8484/auth/realms/setlist_organizer_realm/protocol/openid-connect/certs}
      client:
        provider:
          keycloak:
            issuer-uri: ${KEYCLOAK_REALM_ISSUER_URL:http://localhost:8484/auth/realms/setlist_organizer_realm}
            token-uri: ${KEYCLOAK_REALM_TOKEN_URL:http://localhost:8484/auth/realms/setlist_organizer_realm/protocol/openid-connect/token}

        registration:
          keycloak:
            client-id: setlist_organizer_client

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health, info, metric, env
metrics:
  export:
    prometheus:
      enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

kafka:
  bootstrap-servers: ${KAFKA_HOST_NAME:localhost}:${KAFKA_PORT:9092}