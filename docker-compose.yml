version: "3"

services:

  postgres-keycloak:
    container_name: postgres-keycloak
    image: library/postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: keycloak_db
    restart: unless-stopped

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    volumes:
      - ./keycloak/realms/realm-export.json:/tmp/realm-export.json
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak_db
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin_password
      KEYCLOAK_IMPORT: /tmp/realm-export.json
    ports:
      - 8484:8080
    depends_on:
      - postgres-keycloak
    links:
     - "postgres-keycloak:postgres-keycloak"

  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: setlistOrganizer
      PGDATA: /var/lib/postgresql/data/pgdata
      PGPORT: "${PGPORT}"
    volumes:
      - .:/var/lib/postgresql/data
    network_mode: host

  configserver:
    build: ./configserver
    image: configserver
    container_name: configserver
    ports:
      - 8071:8071
    network_mode: host

  rest-app:
    build: ./rest-app
    image: docker-rest-app
    container_name: rest-app
    ports:
      - 8088:8088
    environment:
      SPRING_PROFILES_ACTIVE: postgres, jpa
      SPRING_CLOUD_CONFIG_URI: http://localhost:8071
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:${PGPORT}/setlistOrganizer
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      KEYCLOAK_REALM_CERT_URL: "${KEYCLOAK_REALM_CERT_URL}"
      KEYCLOAK_REALM_ISSUER_URL: "${KEYCLOAK_REALM_ISSUER_URL}"
      KEYCLOAK_REALM_TOKEN_URL: "${KEYCLOAK_REALM_TOKEN_URL}"
    depends_on:
      - postgres
      - keycloak
      - configserver
    network_mode: host

  web-app:
    build: ./web-app
    image: docker-web-app
    container_name: web-app
    ports:
      - 8080:8080
    environment:
      HOST_NAME: localhost
      KEYCLOAK_REALM_CERT_URL: "${KEYCLOAK_REALM_CERT_URL}"
      KEYCLOAK_REALM_ISSUER_URL: "${KEYCLOAK_REALM_ISSUER_URL}"
      KEYCLOAK_REALM_TOKEN_URL: "${KEYCLOAK_REALM_TOKEN_URL}"
    depends_on:
      - keycloak
      - rest-app
    network_mode: host

  grafana:
    build: ./rest-app/config
    ports:
      - 3000:3000
    volumes:
      - ./rest-app/config/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: "/var/lib/grafana/dashboards/jvm-micrometer_rev9.json"
    network_mode: host

  prometheus:
    image: prom/prometheus
    user: root
    ports:
      - 9090:9090
    volumes:
      - ./rest-app/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    network_mode: host