<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- Use spring servlet for all requests, including static resources -->
  <mvc:default-servlet-handler/>

  <!-- Use @MVC annotations -->
  <mvc:annotation-driven/>

  <!-- Component scan for @Controller, @Service... annotations -->
  <context:component-scan base-package="com.epam.brest*"/>

  <import resource="classpath*:test-db.xml"/>

  <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
    <constructor-arg ref="dataSource"/>
  </bean>

  <bean id="bandDtoDao" class="com.epam.brest.dao.BandDtoDaoJdbc">
    <constructor-arg ref="namedParameterJdbcTemplate"/>
  </bean>

  <bean id="bandDtoService" class="com.epam.brest.service.impl.BandDtoServiceImpl">
    <constructor-arg name="bandDtoDao" ref="bandDtoDao"/>
  </bean>

  <bean id="bandDao" class="com.epam.brest.dao.BandDaoJDBCImpl">
    <constructor-arg ref="namedParameterJdbcTemplate"/>
  </bean>

  <bean id="bandService" class="com.epam.brest.service.impl.BandServiceImpl">
    <constructor-arg name="bandDao" ref="bandDao"/>
  </bean>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:test-db.properties</value>
                <value>classpath*:sql-band.properties</value>
            </list>
        </property>
    </bean>

  <!-- Thymeleaf Template Resolver -->
  <bean id="templateResolver"
        class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
    <property name="prefix" value="/WEB-INF/templates/" />
    <property name="suffix" value=".html" />
    <property name="templateMode" value="HTML" />
    <!-- Template cache is true by default. Set to false if you want             -->
    <!-- templates to be automatically updated when modified.                    -->
    <property name="cacheable" value="false" />
  </bean>

  <!-- Thymeleaf Template Engine (Spring5-specific version) -->
  <bean id="templateEngine"
        class="org.thymeleaf.spring5.SpringTemplateEngine">
    <property name="templateResolvers">
      <set>
        <ref bean="templateResolver" />
      </set>
    </property>
  </bean>

  <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
  <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
    <property name="templateEngine" ref="templateEngine" />
    <property name="characterEncoding" value="UTF-8" />
  </bean>

</beans>